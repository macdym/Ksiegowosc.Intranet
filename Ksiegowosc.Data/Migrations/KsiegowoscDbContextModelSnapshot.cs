// <auto-generated />
using System;
using Ksiegowosc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ksiegowosc.Data.Migrations
{
    [DbContext(typeof(KsiegowoscDbContext))]
    partial class KsiegowoscDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ksiegowosc.Data.Data.Adres", b =>
                {
                    b.Property<int>("IdAdresu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KodPocztowy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Miasto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ulica")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAdresu");

                    b.ToTable("Adres");
                });

            modelBuilder.Entity("Ksiegowosc.Data.Data.Dokument", b =>
                {
                    b.Property<int>("IdDokumentu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazwaDokumentu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlDokumentu")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDokumentu");

                    b.ToTable("Dokumenty");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Dokument");
                });

            modelBuilder.Entity("Ksiegowosc.Data.Data.Kontrachent", b =>
                {
                    b.Property<int>("IdKontrachenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdresIdAdresu")
                        .HasColumnType("int");

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Dostawca")
                        .HasColumnType("bit");

                    b.Property<int>("IdAdresu")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NipLubPesel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumerKonta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Odbiorca")
                        .HasColumnType("bit");

                    b.Property<bool>("PlatnikVat")
                        .HasColumnType("bit");

                    b.Property<string>("Regon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkrotNazwy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Zalezny")
                        .HasColumnType("bit");

                    b.HasKey("IdKontrachenta");

                    b.HasIndex("AdresIdAdresu");

                    b.ToTable("Kontrachenci");
                });

            modelBuilder.Entity("Ksiegowosc.Data.Data.DokumentKontrachenta", b =>
                {
                    b.HasBaseType("Ksiegowosc.Data.Data.Dokument");

                    b.Property<DateTime?>("DataDodania")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKontrachenta")
                        .HasColumnType("int");

                    b.Property<int?>("KontrachentIdKontrachenta")
                        .HasColumnType("int");

                    b.HasIndex("KontrachentIdKontrachenta");

                    b.HasDiscriminator().HasValue("DokumentKontrachenta");
                });

            modelBuilder.Entity("Ksiegowosc.Data.Data.Kontrachent", b =>
                {
                    b.HasOne("Ksiegowosc.Data.Data.Adres", "Adres")
                        .WithMany("Kontrachent")
                        .HasForeignKey("AdresIdAdresu");

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("Ksiegowosc.Data.Data.DokumentKontrachenta", b =>
                {
                    b.HasOne("Ksiegowosc.Data.Data.Kontrachent", "Kontrachent")
                        .WithMany("DokumentKontrachenta")
                        .HasForeignKey("KontrachentIdKontrachenta");

                    b.Navigation("Kontrachent");
                });

            modelBuilder.Entity("Ksiegowosc.Data.Data.Adres", b =>
                {
                    b.Navigation("Kontrachent");
                });

            modelBuilder.Entity("Ksiegowosc.Data.Data.Kontrachent", b =>
                {
                    b.Navigation("DokumentKontrachenta");
                });
#pragma warning restore 612, 618
        }
    }
}
